---------------------MYSQL-----------------------
MySQL is the most popular Open Source Relational SQL Database Management System.
-------------------------------------------------

What is a Database?
A database is a separate application that stores a collection of data. Each database has one or more distinct APIs for creating, accessing, managing, searching and replicating the data it holds.

Nowadays, we use relational database management systems (RDBMS) to store and manage huge volume of data. This is called relational database because all the data is stored into different tables and relations are established using primary keys or other keys known as Foreign Keys.
-------------------------------------------------

MySQL uses many different data types broken into three categories âˆ’

Numeric.
Date and Time.
String Types.

Numeric Data Types:
------------------
INT 
TINYINT
SMALLINT
MEDIUMINT
BIGINT
FLOAT(M,D) --> You can define the display length (M) and the number of decimals (D).
DOUBLE(M,D)
DECIMAL(M,D)

Date and Time Types:
-------------------
DATE --> YYYY-MM-DD
DATETIME --> YYYY-MM-DD HH:MM:SS
TIMESTAMP -->  YYYYMMDDHHMMSS 
TIME --> HH:MM:SS

String Types:
-------------
CHAR(M)
VARCHAR(M) 
ENUM	
-------------------------------

setup
----
Mysql
-->mysql -u root -p
-->root
show databases;
create database test3;
use test3;
select database();
drop database if exists test3;

-----------------------<"Practicals">---------------------------

Creating Tables
---------------
mysql> CREATE TABLE student( 
    -> first_name VARCHAR(30) NOT NULL,
    -> last_name VARCHAR(30) NOT NULL,
    -> email VARCHAR(50) NULL,
    -> street VARCHAR(30) NOT NULL,
    -> city VARCHAR(30) NOT NULL,
    -> state CHAR(2) NOT NULL DEFAULT "PA",
    -> zip MEDIUMINT UNSIGNED NOT NULL,
    -> phone VARCHAR(30) NOT NULL,
    -> sex ENUM('M','F') NOT NULL,
    -> date_entered TIMESTAMP,
    -> lunch_cost FLOAT NULL,
    -> student_id  INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY);

mysql> CREATE TABLE class( 
    -> Name VARCHAR(30) NOT NULL,
    -> class_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY);
------------------------------------

Drop Tables
-----------
DROP TABLE student;
------------------------------------

Insert query
-------
INSERT INTO student VALUES (........);
-------------------------------------

Select query
----------
mysql> SELECT *FROM students;
mysql> SELECT first_name, last_name FROM students LIMIT 5;
mysql> SELECT first_name, last_name FROM students LIMIT 5, 10;
mysql> SELECT CONCAT(first_name," ",last_name)AS name ,
    -> CONCAT(city," ",state)AS hometown
    -> FROM students;
mysql> select sex ,COUNT(*) FROM students GROUP BY sex;
mysql> SELECT city, COUNT(*) FROM students GROUP BY city;
mysql> SELECT city, COUNT(*) FROM students GROUP BY city HAVING COUNT(*) > 1;
mysql> SELECT city, COUNT(*) FROM students GROUP BY city HAVING COUNT(*) = 1;
mysql> SELECT first_name, last_name FROM students WHERE first_name in ('deepak','dinesh','rani');
----------------------------------------

Where query
-----------
mysql> SELECT first_name, last_name FROM students where city ="chennai";
mysql> SELECT first_name, last_name , email FROM students where YEAR(date_entered) >= 2020;
mysql> SELECT first_name, last_name, email, FROM students where zip >= 850054 OR sex ="M";
----------------------------------------

UPDATE Query
------------
mysql> UPDATE scores SET score=25 WHERE student_id=4 AND test_id=4;
mysql> UPDATE tutorials_tbl 
   -> SET tutorial_title = 'Learning JAVA' 
   -> WHERE tutorial_id = 3;
----------------------------------------

DELETE Query
------------
mysql> DELETE FROM absences WHERE student_id =6;
mysql> DELETE FROM tutorials_tbl WHERE tutorial_id=3;
----------------------------------------

LIKE Clause
-----------
mysql> SELECT last_name, first_name FROM students  WHERE first_name LIKE 'd%' AND last_name LIKE '%i';
mysql> SELECT last_name FROM students where last_name LIKE '__i';
mysql> SELECT * from tutorials_tbl 
   -> WHERE tutorial_author LIKE '%jay';
----------------------------------------

Sorting Results
---------------
mysql> SELECT *FROM students ORDER BY first_name;
mysql> SELECT *FROM students ORDER BY first_name DESC;

-----------------------------------------

MySQL join clauses
----------------
A relational database consists of multiple related tables linking together using common columns which are known as foreign key columns. Because of this, data in each table is incomplete from the business perspective.
	
mysql> SELECT a.first_name, a.last_name, b.test_id, b.student_id FROM students a, scores b WHERE a.student_id = b.student_id;

INNER JOIN:
mysql> SELECT a.first_name, a.last_name, b.test_id, b.student_id FROM students a INNER JOIN scores b ON  a.student_id = b.student_id;
mysql> SELECT a.first_name, a.last_name, b.test_id, b.student_id FROM students a INNER JOIN scores b USING(student_id);
mysql> SELECT c.class_id, c.Name, t.date FROM classes c INNER JOIN tests t ON  c.class_id = t.class_id;
------------------------------------------

ALTER
------
mysql> ALTER TABLE test
    -> ADD maxscore  INT NOT NULL AFTER type;
mysql> ALTER TABLE absences ADD COLUMN test_taken CHAR(1) NOT NULL DEFAULT 'F' AFTER student_id;
mysql> ALTER TABLE absences MODIFY  COLUMN test_taken ENUM('T','F')  NOT NULL DEFAULT 'F';
	
-----------------------------------------

=====================================================================
Rough codes:

| | | |
V V V V

show database;

create database Test;

use Test;

mysql> CREATE TABLE student( 
    -> first_name VARCHAR(30) NOT NULL,
    -> last_name VARCHAR(30) NOT NULL,
    -> email VARCHAR(50) NULL,
    -> street VARCHAR(30) NOT NULL,
    -> city VARCHAR(30) NOT NULL,
    -> state CHAR(2) NOT NULL DEFAULT "PA",
    -> zip MEDIUMINT UNSIGNED NOT NULL,
    -> phone VARCHAR(30) NOT NULL,
    -> sex ENUM('M','F') NOT NULL,
    -> date_entered TIMESTAMP,
    -> lunch_cost FLOAT NULL,
    -> student_id  INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY);

show tables;

mysql> DESCRIBE student;

mysql> SELECT *FROM student;

mysql> CREATE TABLE class( 
    -> Name VARCHAR(30) NOT NULL,
    -> class_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY);

mysql> SHOW TABLES;
+----------------+
| Tables_in_Test |
+----------------+
| absence        |
| class          |
| score          |
| student        |
| test           |


mysql> ALTER TABLE test
    -> ADD maxscore  INT NOT NULL AFTER type;

mysql> SELECT first_name, last_name FROM student;


mysql> RENAME TABLE
    -> absence to absences,
    -> class to classes,
    -> score to scores,
    -> student to students,
    -> test to tests;

mysql> SELECT first_name, last_name FROM students where city ="chennai";


mysql> SELECT first_name, last_name , email FROM students where YEAR(date_entered) >= 2020;

mysql> SELECT first_name, last_name, email, FROM students where zip >= 850054 OR sex ="M";

mysql> SELECT * FROM students ORDER BY first_name;

mysql> SELECT * FROM students ORDER BY first_name DESC;

mysql> SELECT first_name, last_name FROM students LIMIT 5;

mysql> SELECT first_name, last_name FROM students LIMIT 5, 10;

mysql> SELECT CONCAT(first_name," ",last_name)AS name ,
    -> CONCAT(city," ",state)AS hometown
    -> FROM students;

mysql> SELECT last_name, first_name FROM students  WHERE first_name LIKE 'd%' AND last_name LIKE '%i';

mysql> SELECT last_name FROM students where last_name LIKE '__i';

mysql> select sex ,COUNT(*) FROM students GROUP BY sex;

mysql> SELECT city, COUNT(*) FROM students GROUP BY city;

mysql> SELECT city, COUNT(*) FROM students GROUP BY city HAVING COUNT(*) > 1;

mysql> SELECT city, COUNT(*) FROM students GROUP BY city HAVING COUNT(*) = 1;

mysql> SELECT 
    -> test_id AS 'Test',
    -> MIN(SCORE) AS MIN,
    -> MAX(SCORE) AS MAX,
    -> MAX(SCORE) - MIN(SCORE)  AS 'RANGE',
    -> SUM(SCORE) AS total,
    -> AVG(SCORE) AS average FROM scores GROUP BY  test_id;
+------+------+------+-------+-------+---------+
| Test | MIN  | MAX  | RANGE | total | average |
+------+------+------+-------+-------+---------+
|    1 |   15 |   19 |     4 |   155 | 15.5000 |
|    2 |   18 |   19 |     1 |   181 | 18.1000 |
|    3 |   21 |   21 |     0 |   189 | 21.0000 |
|    4 |   15 |   25 |    10 |   165 | 18.3333 |
|    5 |   25 |   29 |     4 |   262 | 26.2000 |
|    6 |   15 |   21 |     6 |   168 | 16.8000 |
+------+------+------+-------+-------+---------+

mysql> DELETE FROM absences WHERE student_id =6;
Query OK, 1 row affected (0.01 sec)

mysql> ALTER TABLE absences ADD COLUMN test_taken CHAR(1) NOT NULL DEFAULT 'F' AFTER student_id;

mysql> ALTER TABLE absences MODIFY  COLUMN test_taken ENUM('T','F')  NOT NULL DEFAULT 'F';

mysql> SELECT *FROM scores WHERE student_id =  4;

mysql> UPDATE scores SET score=25 WHERE student_id=4 AND test_id=4;

SELECT first_name, last_name FROM students WHERE first_name in ('deepak','dinesh','rani');


SELECT 	CONCAT first_name, scores FROM tests, scores, students WHERE city = 'chennai' AND tests.test_id = scores.test_id AND scores.student_id = students.student_id;




